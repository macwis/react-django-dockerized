version: '3.7'

services:

  django:
    build: ./backend
    container_name: dev-django
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8001:8000
    env_file:
      - ./.env.dev
    volumes:
      - ./backend/:/srv/app
      - static:/srv/app/static
      - media:/srv/app/media
    depends_on:
      - db

  react:
    build: ./frontend
    container_name: dev-react
    command: npm start
    ports:
      - 3001:3000
    env_file:
      - ./.env.dev
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend/:/srv/app
      - /srv/app/node_modules
    depends_on:
      - django

  db:
    image: postgres:12.0-alpine
    container_name: dev-db
    ports:
      - 5432:5432
    env_file: ./.env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data

  jenkins:
    image: jenkins/jenkins:lts
    container_name: dev-jenkins
    user: root
    ports:
      - 8083:8080
      - 50000:50000
    volumes:
      - /jenkins/data:/var/jenkins_home
      - /jenkins/artifacts:/var/jenkins_artifacts
      - /var/run/docker.sock:/var/run/docker.sock 
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  nginx:
    build: ./nginx
    container_name: dev-nginx
    ports:
      - 8080:80
    restart: always
    volumes:
      - static:/srv/app/static
      - media:/srv/app/media
    depends_on:
      - django
      - react
      - db

volumes:
  postgres_data:
  media:
  static:
